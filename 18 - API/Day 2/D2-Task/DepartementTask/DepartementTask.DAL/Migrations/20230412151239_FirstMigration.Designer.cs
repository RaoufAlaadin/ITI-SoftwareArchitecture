// <auto-generated />
using DepartementTask.DAL.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DepartementTask.DAL.Migrations
{
    [DbContext(typeof(DepartementContext))]
    [Migration("20230412151239_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DepartementTask.DAL.Data.Models.Departement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("departements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sales"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Marketing"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Finance"
                        },
                        new
                        {
                            Id = 4,
                            Name = "HR"
                        },
                        new
                        {
                            Id = 5,
                            Name = "IT"
                        });
                });

            modelBuilder.Entity("DepartementTask.DAL.Data.Models.Developer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("developers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Jane Smith"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Bob Johnson"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Emily Davis"
                        },
                        new
                        {
                            Id = 5,
                            Name = "David Lee"
                        });
                });

            modelBuilder.Entity("DepartementTask.DAL.Data.Models.Tickets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartementId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartementId");

                    b.ToTable("tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartementId = 1,
                            Description = "This is ticket 1",
                            Name = "Ticket 1"
                        },
                        new
                        {
                            Id = 2,
                            DepartementId = 2,
                            Description = "This is ticket 2",
                            Name = "Ticket 2"
                        },
                        new
                        {
                            Id = 3,
                            DepartementId = 3,
                            Description = "This is ticket 3",
                            Name = "Ticket 3"
                        },
                        new
                        {
                            Id = 4,
                            DepartementId = 4,
                            Description = "This is ticket 4",
                            Name = "Ticket 4"
                        },
                        new
                        {
                            Id = 5,
                            DepartementId = 5,
                            Description = "This is ticket 5",
                            Name = "Ticket 5"
                        });
                });

            modelBuilder.Entity("DeveloperTickets", b =>
                {
                    b.Property<int>("developerId")
                        .HasColumnType("int");

                    b.Property<int>("ticketsId")
                        .HasColumnType("int");

                    b.HasKey("developerId", "ticketsId");

                    b.HasIndex("ticketsId");

                    b.ToTable("DeveloperTickets");
                });

            modelBuilder.Entity("DepartementTask.DAL.Data.Models.Tickets", b =>
                {
                    b.HasOne("DepartementTask.DAL.Data.Models.Departement", "Departement")
                        .WithMany("tickets")
                        .HasForeignKey("DepartementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departement");
                });

            modelBuilder.Entity("DeveloperTickets", b =>
                {
                    b.HasOne("DepartementTask.DAL.Data.Models.Developer", null)
                        .WithMany()
                        .HasForeignKey("developerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DepartementTask.DAL.Data.Models.Tickets", null)
                        .WithMany()
                        .HasForeignKey("ticketsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DepartementTask.DAL.Data.Models.Departement", b =>
                {
                    b.Navigation("tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
